name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential
        
    - name: Install pipenv
      run: |
        python -m pip install --upgrade pip
        pip install pipenv
        
    - name: Install dependencies
      run: |
        pipenv install --dev --deploy
        
    - name: Lint with flake8
      run: |
        pipenv run flake8 pysnooapi
        
    - name: Lint with pydocstyle
      run: |
        pipenv run pydocstyle pysnooapi
        
    - name: Lint with pylint
      run: |
        pipenv run pylint pysnooapi
        
    - name: Type check with mypy
      run: |
        pipenv run mypy --ignore-missing-imports pysnooapi
        
    - name: Test with pytest (unit tests only)
      run: |
        pipenv run pytest tests/unit -v --cov=pysnooapi --cov-report=xml --cov-report=term-missing
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  integration-test:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
        
    - name: Install pipenv
      run: |
        python -m pip install --upgrade pip
        pip install pipenv
        
    - name: Install dependencies
      run: |
        pipenv install --dev --deploy
        
    - name: Run integration tests
      env:
        TEST_USERNAME: ${{ secrets.SNOO_TEST_USERNAME }}
        TEST_PASSWORD: ${{ secrets.SNOO_TEST_PASSWORD }}
      run: |
        if [ -n "$TEST_USERNAME" ] && [ -n "$TEST_PASSWORD" ]; then
          echo "TEST_USERNAME = '$TEST_USERNAME'" > tests/test_credentials.py
          echo "TEST_PASSWORD = '$TEST_PASSWORD'" >> tests/test_credentials.py
          echo "INTEGRATION_TESTS_ENABLED = True" >> tests/test_credentials.py
          pipenv run pytest tests/integration -v -m "integration"
        else
          echo "Skipping integration tests - no credentials provided"
        fi